<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/lang
http://www.springframework.org/schema/lang/spring-lang.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- Implementation of BeanPostProcessor to customize logics after container's initiation. -->
	<!-- 这个bean是FetchDataSourceWithPropertyPlaceholderConfigurer的注释中log打印的主要来源 -->
	<!-- 如果其它的应用程序也使用这个配置文件就都会打印如FetchDataSourceWithPropertyPlaceholderConfigurer中的log，注释掉当前这个bean可以避免打印这些log -->
	<!-- @see net.brian.coding.java.web.ssm.spring.demo.chapter05.ioc.custombeans.FetchDataSourceWithPropertyPlaceholderConfigurer -->
<!-- 	<bean class="net.brian.coding.java.web.ssm.spring.demo.chapter05.ioc.custombeans.BeanPostProcessorDemo" /> -->

	<!-- AOP related demo start -->
	<bean id="logService" class="net.brian.coding.java.web.ssm.spring.demo.chapter09.aop.log.xmldemo.LogServiceImpl"></bean>
	<bean id="loginService" class="net.brian.coding.java.web.ssm.spring.demo.chapter09.aop.log.xmldemo.LoginServiceImpl"></bean>

	<aop:config>
		<!-- 切入点：也即新增功能点 -->
		<aop:pointcut
			expression="execution(* net.brian.coding.java.web.ssm.spring.demo.chapter09.aop.log.xmldemo.LoginServiceImpl.*(..))"
			id="myPointcut" />
		<!-- 切面： 定义将哪个方法，织入到哪个切入点，也就是定义哪些方法将使用切入点定义的新功能 -->
		<aop:aspect id="dd" ref="logService">
			<aop:before method="log" pointcut-ref="myPointcut" />
			<aop:after method="logArg" pointcut-ref="myPointcut" />
			<aop:after-returning method="logArgAndReturn" returning="returnObj" pointcut-ref="myPointcut" />
		</aop:aspect>
	</aop:config>

	<!-- AOP related demo end -->
	
	<aop:aspectj-autoproxy/>  
	<bean id="personServiceBean" class="net.brian.coding.java.web.ssm.spring.demo.chapter09.aop.log.annotationdemo.PersonServiceBean"/>  
	<bean id="myInterceptor" class="net.brian.coding.java.web.ssm.spring.demo.chapter09.aop.log.annotationdemo.NormalAopLogDemo"/>  

	
</beans>