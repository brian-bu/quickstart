package net.brian.coding.algorithm.lintcode.arrays;

import java.util.List;

import org.junit.Test;

/**
 * 
 * 题目要求：给定一个整数数组，找到和为零的子数组。你的代码应该返回满足要求的子数组的起始位置和结束位置
 * 注意事项：至少有一个子数组和为零。
 * 题目链接：http://www.lintcode.com/zh-cn/problem/subarray-sum/
 * 
 * 思路分析： 
 * 
 * 时间复杂度：
 *
 */
public class SubarraySum {
	
	/*
     * @param nums: A list of integers
     * @return: A list of integers includes the index of the first number and the index of the last number
     */
    public List<Integer> subarraySum(int[] nums) {
        // write your code here
    	
    	return null;
    }
	
	@Test
	public void testCase() {
		System.out.println(subarraySum(new int[]{-3, 1, 2, -3, 4}));
		System.out.println();
	}
}
